(()=>{"use strict";const t=class{constructor(t,e={}){if("string"==typeof t)("object"!=typeof e||null===e||Array.isArray(e))&&(console.error("second parameter must me a object,configuration failed"),e={}),this.config({apiKey:t,...e});else{if("object"!=typeof t||null===t||Array.isArray(t))throw new Error("missed apikey parameter");this.config(t)}}defaultUrl="";params="";setKey(t){if(!t)throw new Error("missed paramete for setting apikey");this.config({apiKey:t})}async search(t){this.searchConfig({...this.defaultConfig,...t});let e=this.defaultUrl+=this.params;const r=await fetch(e),s={};return s.result=r.ok,s.data=await r.json(),this.params="",s}defaultConfig={};config(t){for(const e of Object.entries(t))this.defaultConfig[e[0]]=e[1]}searchConfig(t){for(const e of Object.entries(t))this.attachUrlParams(e)}attachUrlParams(t){const[e,r]=t;let s=!1;console.log(this.#t()),this.#t().forEach((t=>{t[0]===e&&(this.params+=t[1]+r,s=!0)})),s||console.error(e+"  not exist")}#e=[["apiKey","appid"],["city","q"],["language","lang"],["mode","mode"],["units","units"]];rules=[];#t(){return[...this.filterRules(this.#e),...this.filterRules(this.rules)]}filterRules(t){const e=this.arrayCopyFn(t);return e.forEach((t=>{t[1].trim(),t[1]=`&${t[1]}=`})),e}arrayCopyFn(t){const e=[];return t.forEach((t=>{Array.isArray(t)?e.push(this.arrayCopyFn(t)):e.push(t)})),e}optionsList(){return[...this.#e,...this.rules].map((t=>t[0]))}},e=class extends t{defaultUrl="https://api.openweathermap.org/data/2.5/weather?";rules=[["latitude","lat"],["longitude","lon"]]},r=class extends t{defaultUrl="http://api.openweathermap.org/geo/1.0/direct?limit=5";rules=[["limit","limit"]]};window.weather=function(t,s){if(!t)throw new Error("missed paramete for setting apikey");return{currentWeather:new e(t,s),searchCities:new r(t,s)}}})();